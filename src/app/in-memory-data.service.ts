// import { InMemoryDbService } from 'angular-in-memory-web-api';
// import { Course, Semester } from './course'

// export class InMemoryDataService implements InMemoryDbService {
//   createDb() {
//     let courses = [
//         {id:401, course_code:'COMP 401', name:'Foundation of Programming', semesters:[Semester.Fall, Semester.Spring], description:'Required preparation, a first formal course in computer programming (e.g., COMP 110, COMP 116). Advanced programming: object-oriented design, classes, interfaces, packages, inheritance, delegation, observers, MVC (model view controller), exceptions, assertions. Honors version available'},
//         {id:410, course_code:'COMP 410', name:'Data Structures', semesters:[Semester.Fall, Semester.Spring], description:'The analysis of data structures and their associated algorithms. Abstract data types, lists, stacks, queues, trees, and graphs. Sorting, searching, hashing.'},
//         {id:411, course_code:'COMP 411', name:'Computer Organization', semesters:[Semester.Fall, Semester.Spring], description:'Digital logic, circuit components. Data representation, computer architecture and implementation, assembly language programming.'},
//         {id:426, course_code:'COMP 426', name:'Modern Web Programming', semesters:[Semester.Fall], description:'Developing applications for the World Wide Web including both client-side and server-side programming. Emphasis on Model-View-Controller architecture, AJAX, RESTful Web services, and database interaction.'},
//         {id:431, course_code:'COMP 431', name:'Internet Services and Protocols', semesters:[Semester.Fall, Semester.Spring], description:'Application-level protocols HTTP, SMTP, FTP, transport protocols TCP and UDP, and the network-level protocol IP. Internet architecture, naming, addressing, routing, and DNS. Sockets programming. Physical-layer technologies. Ethernet, ATM, and wireless.'},
//         {id:435, course_code:'COMP 435', name:'Computer Security Concepts', semesters:[Semester.Fall], description:''},
//         {id:455, course_code:'COMP 455', name:'Models of Languages and Computation', semesters:[Semester.Fall, Semester.Spring], description:'Introduction to the theory of computation. Finite automata, regular languages, pushdown automata, context-free languages, and Turing machines. Undecidable problems.'},
//         {id:475, course_code:'COMP 475', name:'2D Computer Graphics', semesters:[Semester.Fall], description:''},
//         {id:486, course_code:'COMP 486', name:'Applications of Natural Language Processing', semesters:[Semester.Infrequent], description:'Study of applications of natural language processing techniques and the representations and processes needed to support them. Topics include interfaces, text retrieval, machine translation, speech processing, and text generation.'},
//         {id:487, course_code:'COMP 487', name:'Information Retrieval', semesters:[Semester.Infrequent], description:'Study of information retrieval and question answering techniques, including document classification, retrieval and evaluation techniques, handling of large data collections, and the use of feedback.'},
//         {id:520, course_code:'COMP 520', name:'Compilers', semesters:[Semester.Spring], description:'Design and construction of compilers. Theory and pragmatics of lexical, syntactic, and semantic analysis. Interpretation. Code generation for a modern architecture. Run-time environments. Includes a large compiler implementation project.'},
//         {id:521, course_code:'COMP 521', name:'Files and Databases', semesters:[Semester.Fall], description:'Placement of data on secondary storage. File organization. Database history, practice, major models, system structure and design.'},
//         {id:523, course_code:'COMP 523', name:'Software Engineering Laboratory', semesters:[Semester.Fall, Semester.Spring], description:'Organization and scheduling of software engineering projects, structured programming, and design. Each team designs, codes, and debugs program components and synthesizes them into a tested, documented program product.'},
//         {id:524, course_code:'COMP 524', name:'Programming Language Concepts', semesters:[Semester.Infrequent], description:'Concepts of high-level programming and their realization in specific languages. Data types, scope, control structures, procedural abstraction, classes, concurrency. Run-time implementation.'},
//         {id:530, course_code:'COMP 530', name:'Operating Systems', semesters:[Semester.Fall], description:'Types of operating systems. Concurrent programming. Management of storage, processes, devices. Scheduling, protection. Case study. Course includes a programming laboratory. Honors version available'},
//         {id:533, course_code:'COMP 533', name:'Distributed Systems', semesters:[Semester.Infrequent, Semester.Spring], description:'Distributed systems and their goals; resource naming, synchronization of distributed processes; consistency and replication; fault tolerance; security and trust; distributed object-based systems; distributed file systems; distributed Web-based systems; and peer-to-peer systems.'},
//         {id:535, course_code:'COMP 535', name:'Introduction to Computer Security', semesters:[Semester.Fall, Semester.Spring], description:'Principles of securing the creation, storage, and transmission of data and ensuring its integrity, confidentiality and availability. Topics include access control, cryptography and cryptographic protocols, network security, and online privacy.'},
//         {id:541, course_code:'COMP 541', name:'Digital Logic and Computer Design', semesters:[Semester.Fall, Semester.Spring], description:'This course is an introduction to digital logic as well as the structure and electronic design of modern processors. Students will implement a working computer during the laboratory sessions.'},
//         {id:550, course_code:'COMP 550', name:'Algorithms and Analysis', semesters:[Semester.Fall, Semester.Spring], description:'Formal specification and verification of programs. Techniques of algorithm analysis. Problem-solving paradigms. Survey of selected algorithms.'},
//         {id:555, course_code:'COMP 555', name:'Bioalgorithms', semesters:[Semester.Spring], description:'Bioinformatics algorithms. Topics include DNA restriction mapping, finding regulatory motifs, genome rearrangements, sequence alignments, gene prediction, graph algorithms, DNA sequencing, protein sequencing, combinatorial pattern matching, approximate pattern matching, clustering and evolution, tree construction, Hidden Markov Models, randomized algorithms.'},
//         {id:560, course_code:'COMP 560', name:'Artificial Intelligence', semesters:[Semester.Infrequent], description:'Introduction to techniques and applications of modern artificial intelligence. Combinatorial search, probabilistic models and reasoning, and applications to natural language understanding, robotics, and computer vision.'},
//         {id:562, course_code:'COMP 562', name:'Introduction to Machine Learning', semesters:[Semester.Infrequent, Semester.Fall], description:'Machine learning as applied to speech recognition, tracking, collaborative filtering and recommendation systems. Classification, regression, support vector machines, hidden Markov models, principal component analysis, and deep learning.'},
//         {id:572, course_code:'COMP 572', name:'Computational Photography', semesters:[Semester.Infrequent], description:'The course provides a hands on introduction to techniques in computational photography--the process of digitally recording light and then performing computational manipulations on those measurements to produce an image or other representation. The course includes an introduction to relevant concepts in computer vision and computer graphics.'},
//         {id:575, course_code:'COMP 575', name:'Introduction to Computer Graphics', semesters:[Semester.Spring], description:'Hardware, software, and algorithms for computer graphics. Scan conversion, 2-D and 3-D transformations, object hierarchies. Hidden surface removal, clipping, shading, and antialiasing. Not for graduate computer science credit.'},
//         {id:576, course_code:'COMP 576', name:'Mathematics for Image Computing', semesters:[Semester.Infrequent], description:'Mathematics relevant to image processing and analysis using real image computing objectives and provided by computer implementations.'},
//         {id:580, course_code:'COMP 580', name:'Enabling Technologies', semesters:[Semester.Infrequent, Semester.Spring], description:'We will investigate ways computer technology can be used to mitigate the effects of disabilities and the sometimes surprising response of those we intended to help.'},
//         {id:581, course_code:'COMP 581', name:'Introduction to Robotics', semesters:[Semester.Fall], description:'Instructor permission for students lacking the prerequisites. Hands-on introduction to robotics with a focus on the computational aspects. Students will build and program mobile robots. Topics include kinematics, actuation, sensing, configuration spaces, control, and motion planning. Applications include industrial, mobile, personal, and medical robots. Honors version available'},
//         {id:585, course_code:'COMP 585', name:'Serious Games', semesters:[Semester.Spring], description:'Concepts of computer game development and their application beyond entertainment to fields such as education, health, and business. Course includes team development of a game. Honors version available'},
//         {id:590, course_code:'COMP 590', name:'Topics in Computer Science', semesters:[Semester.Fall, Semester.Spring], description:'Permission of the instructor. This course has variable content and may be taken multiple times for credit. Honors version available'}
//     ];
//     return { courses };
//   }
// }
